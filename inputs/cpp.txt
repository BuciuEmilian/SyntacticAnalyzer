@program@ ::= @lista_importuri@ using namespace std; int main() {@lista_instructiuni@ return CONST;}

@lista_importuri@ ::= @import@
@lista_importuri@ ::= @import@@lista_importuri@

@import@ ::= #include < iostream >



@lista_instructiuni@ ::= @instructiune@@lista_instructiuni@
@lista_instructiuni@ ::= @instructiune@
@instructiune@ ::= @atribuire@
@instructiune@ ::= @ciclare@
@instructiune@ ::= @intrare@
@instructiune@ ::= @iesire@
@instructiune@ ::= @conditional@
@instructiune@ ::= @declarare@

@tip_de_date@ ::= int
@tip_de_date@ ::= float
@tip_de_date@ ::= om

@atribuire@ ::= @id@ = @expr@;
@expr@ ::= @id@
@expr@ ::= @const@
@expr@ ::= @id@ @op@ @expr@
@expr@ ::= @const@ @op@ @expr@
@op@ ::= +
@op@ ::= -
@op@ ::= *
@op@ ::= /
@op@ ::= %

@intrare@ ::= cin >> @lista_intrare@;
@lista_intrare@ ::= @id@
@lista_intrare@ ::= @id@ >> @lista_intrare@

@iesire@ ::= cout << @lista_iesire@;
@lista_iesire@ ::= @id@
@lista_iesire@ ::= @id@ << @lista_iesire@
@lista_iesire@ ::= @const@
@lista_iesire@ ::= @const@ << @lista_iesire@

@conditional@ ::= if(@conditie@){@lista_instructiuni@}
@conditional@ ::= if(@conditie@){@lista_instructiuni@}else{@lista_instructiuni@}
@conditie@ ::= @expr_logica@
@conditie@ ::= @expr_logica@ @op_logic@ @conditie@
@expr_logica@ ::= @expr@
@expr_logica@ ::= @expr@ @comparare@ @expr@
@comparare@ ::= >
@comparare@ ::= <
@comparare@ ::= >=
@comparare@ ::= <=
@comparare@ ::= ==
@comparare@ ::= !=
@op_logic@ ::= &&
@op_logic@ ::= ||

@ciclare@ ::= @pentru@
@ciclare@ ::= @cat_timp@
@ciclare@ ::= @do_while@
@pentru@ ::= for(@atribuire@ @conditie@; @atribuire_fs@){@lista_instructiuni@}
@cat_timp@ ::= while(@conditie@){@lista_instructiuni@}
@do_while@ ::= do{@lista_instructiuni@}while(@conditie@);
@atribuire_fs@ ::= @id@ = @expr@

@declarare@ ::= @tip_de_date@ @lista_id@;
@lista_id@ ::= @id@
@lista_id@ ::= @id@ , @lista_id@

@id@ ::= ID
@const@ ::= CONST